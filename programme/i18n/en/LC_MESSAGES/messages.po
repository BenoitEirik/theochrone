# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-01-28 06:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: messages.py:13
msgid ""
"A universal calendar for the Tridentine Mass (i.e. Extraordinary Form of the "
"Roman Rite)"
msgstr ""

#: messages.py:14
msgid "Please pray God for me."
msgstr ""

#: messages.py:16
msgid "Main options"
msgstr ""

#: messages.py:16
msgid "Main options of the program"
msgstr ""

#: messages.py:17
msgid ""
"Theochrone accepts many formats :\n"
"                  - Nothing : current day\n"
"                  - A complete date with year, month and day of month, for "
"example as following :\n"
"                    - DD MM YYYY\n"
"                    - DD-MM-YYYY\n"
"                    - DD/MM/YYYY\n"
"                    - DDMMYYYY (eight characters required)\n"
"                    - Day in figures, month in letters, year in figures : "
"ex. 30 december 1990 ; 8th july 1990\n"
"                    - weekday before the date as above : ex. Wednesday the "
"24th of January 2017\n"
"                    WARNING !!! The order of these elements much depends on "
"your language.\n"
"                - You can imply one of these elements, and so works "
"Theochrone :\n"
"                    - a figure between 1 and 31 : day of the current month "
"in the current year\n"
"                    - a weekday in letters only : the requested day in the "
"current week (starting with Sunday)\n"
"                    - a month only (ex : july, sept,...) : the complete "
"month of the current year\n"
"                    - the day and the month without year : current year "
"used\n"
"                    - a number between 1600 and 4100 : the complete year.\n"
"                    - a word as listed below in your current language :\n"
"                        - 'week' : the complete current week, starting with "
"Sunday, ending with Saturday. You can also ask for 'next' or 'last' 'week', "
"which returns the week after current, and the past one.\n"
"                        - 'tomorrow' : the day after current one. You can "
"also ask for the 'day after tomorrow'.\n"
"                        - 'yesterday' : the day before current one. You can "
"also ask for the 'day before yesterday'.\n"
"                        - 'next month', or 'previous month', which returns "
"the month after current one, and the month before current one.\n"
"                        - 'next year', or 'previous year', which returns the "
"year after current one, and the year before current one.\n"
"                All of these formats are also accepted by the --from and --"
"to options. (See below)\n"
"                    "
msgstr ""

#: messages.py:41
msgid ""
"With --to option, --from option can be used to point out the beginning of "
"the period you want to print.\n"
"                  Arguments accepted have exactly the same format as DATE "
"(see above).\n"
"                  --from may be implied : if --to point out a date later "
"than the current day,\n"
"                  --from would automatically considered to be the current "
"day ;\n"
"                  else, it would be the first of january of the current year."
msgstr ""

#: messages.py:46
msgid ""
"With --from option, --to option can be used to point out the end of the "
"period you want to print.\n"
"                  Arguments accepted have exactly the same format as DATE "
"(see above).\n"
"                  --to may be implied : if --from point out a date prior to "
"the current day,\n"
"                  --to would automatically considered to be the current "
"day ;\n"
"                  else, it would be the 31st of december of the current year."
msgstr ""

#: messages.py:51
msgid ""
"Alpha. Does not work properly. Reverse is to be a way to find and print "
"feast by entering their names as arguments, ex : -r Easter, -r 21 Sunday "
"after Pentecosten,... Every other options should be available with this one."
msgstr ""

#: messages.py:53
msgid "Print options"
msgstr ""

#: messages.py:53
msgid "Convenient options for printing results"
msgstr ""

#: messages.py:54
msgid "make theochrone more verbose. Equals to -cdstwLD, and more."
msgstr ""

#: messages.py:55
msgid "print liturgical colour"
msgstr ""

#: messages.py:56
msgid "print degree of the liturgical feast"
msgstr ""

#: messages.py:57
msgid "print weekday"
msgstr ""

#: messages.py:58
msgid "print wether the feast was transfered"
msgstr ""

#: messages.py:59
msgid "print whether the feast belongs to the sanctorum or de tempore"
msgstr ""

#: messages.py:60
msgid "print to which liturgical time the feast belongs to"
msgstr ""

#: messages.py:61
msgid "print date"
msgstr ""

#: messages.py:62
msgid "choose your language /!\\ ONLY FRENCH AVAILABLE /!\\ "
msgstr ""

#: messages.py:64
msgid "Selection options"
msgstr ""

#: messages.py:64
msgid "Options to focus researches"
msgstr ""

#: messages.py:65
msgid "select which proper or rite you want to use"
msgstr ""

#: messages.py:66
msgid "select which ordo you want to use"
msgstr ""

#: messages.py:67
msgid ""
"used with -r/--reverse, print a more complete list of feasts matching with "
"arguments entered"
msgstr ""

#: messages.py:69
msgid "System options"
msgstr ""

#: messages.py:69
msgid "Other options for developers"
msgstr ""

#: messages.py:72
msgid "open O Crux ave Spes Unica"
msgstr ""
